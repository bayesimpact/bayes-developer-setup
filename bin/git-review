#!/bin/bash
readonly REVIEWER=$1
readonly REMOTE_REPO="origin"
readonly BASE_BRANCH="${REMOTE_REPO}/master"
if [ "$1" == "-f" ] || [ "$1" == "--force" ]; then
  readonly FORCE_PUSH="-f"
fi

readonly BRANCH="$(git rev-parse --abbrev-ref HEAD)"
if [ -z "${BRANCH}" ]; then
  exit 2
fi

if [ "${BRANCH}" == "master" ]; then
  echo "branch required:" 1>&2
  git branch | grep -v \ master$ 1>&2
  exit 1
fi

# Ensures that current dir is clean.
if [ -n "$(git diff HEAD --shortstat 2> /dev/null | tail -n1)" ]; then
  echo "Current git status is dirty. Commit, stash or revert your changes before sending for review." 1>&2
  exit 3
fi

# Ensures that there are some change to review.
if [ -z "$(git diff $(git merge-base HEAD "${BASE_BRANCH}") --shortstat 2> /dev/null | tail -n1)" ]; then
  echo "All code on this branch has already been submitted" 1>&2
  exit 4
fi

readonly USERNAME=$(git config user.email | sed -e "s/@.*$//")
readonly EXISTING_REMOTE_BRANCH=$(git config "branch.${BRANCH}.merge" | sed -e "s/refs.heads.//")
if [ -n "${EXISTING_REMOTE_BRANCH}" ]  && [ "${EXISTING_REMOTE_BRANCH}" != "master" ]; then
  # Ensures that there are no invalid characters (i.e "#"") in remote branch name
  readonly REMOTE_BRANCH=$(sed -e "s/#//" <<< "${EXISTING_REMOTE_BRANCH}")
else
  if [ -z "${USERNAME}" ]; then
    echo "Could not find username, most probably you need to setup an email with:" 1>&2
    echo "  git config user.email <me@bayesimpact.org>" 1>&2
    exit 5
  fi
  # Ensures that there are no invalid characters (i.e "#"") in remote branch name
  readonly REMOTE_BRANCH=$(sed -e "s/#//" <<< "${USERNAME}-${BRANCH}")
fi
git push ${FORCE_PUSH} -u "${REMOTE_REPO}" "${BRANCH}:${REMOTE_BRANCH}"

readonly MESSAGE_FILE=$(mktemp)

git log "${BASE_BRANCH}..${BRANCH}" --format=%B > "${MESSAGE_FILE}"

# Append message generated by .git-review-hook in repo.
# TODO: Test this feature.
readonly GIT_ROOT="$(git rev-parse --show-toplevel)"
readonly GIT_REVIEW_HOOK="${GIT_ROOT}/.git-review-hook"
if [ -x "${GIT_REVIEW_HOOK}" ]; then
  export BRANCH
  export REMOTE_BRANCH
  export REVIEWER
  "${GIT_REVIEW_HOOK}" >> "${MESSAGE_FILE}"
fi

if [ -z "${FORCE_PUSH}" ]; then
  hub pull-request -F "${MESSAGE_FILE}" -a "${REVIEWER}" -h "${REMOTE_BRANCH}" | \
    sed -e "s/github.com/reviewable.io\/reviews/;s/pull\///"
fi

rm "${MESSAGE_FILE}"
